/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package exa;


import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
    import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import javax.swing.JTable;

/**
 *
 * @author pc
 */
public class examen extends javax.swing.JFrame {
    
    /**
     * Creates new form examen
     */
    public examen() {
        initComponents();
         llenarTabla();

    }
    Connection con,connection;
    Statement stmt,st;

 
public void llenarTabla() {
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/coductores","root","");
            Statement stmt = con.createStatement();

            // Ejecutar la consulta y obtener los resultados en un objeto ResultSet
            String query = "SELECT * FROM carros";
            ResultSet resultSet = stmt.executeQuery(query);

            // Obtener el modelo de tabla
            DefaultTableModel model = (DefaultTableModel) tb_carros.getModel();

            // Limpiar la tabla antes de llenarla con nuevos datos
            model.setRowCount(0);

            // Iterar sobre los resultados del ResultSet y agregar cada fila al modelo de la tabla
            while (resultSet.next()) {
                Object[] row = new Object[3];
                row[0] = resultSet.getInt("id_carros");
                row[1] = resultSet.getString("placa");
                row[2] = resultSet.getString("descripcion");
                model.addRow(row);
            }

            // Cerrar la conexión y el Statement
            stmt.close();
            con.close();
        } catch (SQLException e) {
            System.err.println("Error al conectar a la base de datos: " + e.getMessage());
        }
    }
public void Gcoductores()
{
    try {
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/coductores", "root", "");
        Statement stmt = con.createStatement();

        String tipoAuto = "";

        if (r_meca.isSelected()) {
            tipoAuto = "Mecánico";
        }if (r_auto.isSelected()) {
            tipoAuto = "Automático";
        }if(r_auto.isSelected() == r_meca.isSelected()){
            tipoAuto = "automatico y manual";
        }
        
        

        String query = "INSERT INTO conductor (id_conductor, nombre, licencia, cuidad, tipo_auto) VALUES ('" +
                codigo.getText() + "', '" + nombre.getText() + "', '" + licencia.getText() + "', '" + cuidad.getText() + "', '" + tipoAuto + "')";

        stmt.executeUpdate(query);

        stmt.close();
        con.close();
        
        JOptionPane.showMessageDialog(null, "El conductor ha sido guardado correctamente.");

    } catch (SQLException e) {
        System.err.println("Error al guardar el conductor en la base de datos: " + e.getMessage());
    }
}
public void Dcoductores(){
    String idCond = codigo.getText(); // Obtener el valor de FacturaID del JTextField

try {
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/coductores", "root", "");
    Statement stmt = con.createStatement();
    
    String sql = "INSERT INTO d_conductor (id_conductor, id_carro) VALUES (?, ?)";
    PreparedStatement statement = con.prepareStatement(sql);

    DefaultTableModel model = (DefaultTableModel) tb_conductores.getModel();
    int rowCount = model.getRowCount();

    for (int i = 0; i < rowCount; i++) {
        String codigoc = model.getValueAt(i, 0).toString();
        String placa = model.getValueAt(i, 1).toString();
        String descripcion = model.getValueAt(i, 2).toString();

        statement.setString(1, codigoc);
        statement.setString(2, idCond);
        statement.executeUpdate();
    }

    statement.close();
    con.close();

    System.out.println("Datos insertados correctamente en la tabla d_conductor");
} catch (SQLException e) {
    System.err.println("Error al insertar datos en la tabla d_conductor: " + e.getMessage());
}

}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tipocarros = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        licencia = new javax.swing.JTextField();
        codigo = new javax.swing.JTextField();
        cuidad = new javax.swing.JTextField();
        nombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        r_meca = new javax.swing.JRadioButton();
        r_auto = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_conductores = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb_carros = new javax.swing.JTable();
        quitartodo = new javax.swing.JButton();
        agregar = new javax.swing.JButton();
        agretodo = new javax.swing.JButton();
        quitar = new javax.swing.JButton();
        bt_salir = new javax.swing.JButton();
        bt_nuevo1 = new javax.swing.JButton();
        bt_cancelar = new javax.swing.JButton();
        bt_guardar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("Registro de Conductor");

        jLabel2.setText("Licencia");

        jLabel3.setText("Cuidad");

        jLabel4.setText("Codigo");

        licencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                licenciaActionPerformed(evt);
            }
        });

        codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoActionPerformed(evt);
            }
        });

        nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreActionPerformed(evt);
            }
        });

        jLabel5.setText("Nombre");

        r_meca.setText("Mecanico");
        r_meca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_mecaActionPerformed(evt);
            }
        });

        r_auto.setText("Automatico");
        r_auto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_autoActionPerformed(evt);
            }
        });

        tb_conductores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Placa", "Descripcion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tb_conductores);

        tb_carros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Placa", "Descripcion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tb_carros);

        quitartodo.setText("<<");
        quitartodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitartodoActionPerformed(evt);
            }
        });

        agregar.setText(">");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        agretodo.setText(">>");
        agretodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agretodoActionPerformed(evt);
            }
        });

        quitar.setText("<");
        quitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitarActionPerformed(evt);
            }
        });

        bt_salir.setText("salir");

        bt_nuevo1.setText("Nuevo");

        bt_cancelar.setText("Cancelar");

        bt_guardar1.setText("Guardar");
        bt_guardar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_guardar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel4)
                        .addGap(17, 17, 17)
                        .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel5)
                        .addGap(13, 13, 13)
                        .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(r_meca))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel2)
                        .addGap(13, 13, 13)
                        .addComponent(licencia, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel3)
                        .addGap(17, 17, 17)
                        .addComponent(cuidad, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(r_auto))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agretodo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quitar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quitartodo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(bt_nuevo1)
                        .addGap(7, 7, 7)
                        .addComponent(bt_cancelar)
                        .addGap(5, 5, 5)
                        .addComponent(bt_guardar1)
                        .addGap(9, 9, 9)
                        .addComponent(bt_salir)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r_meca))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(licencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cuidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r_auto))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(agregar)
                        .addGap(7, 7, 7)
                        .addComponent(agretodo)
                        .addGap(7, 7, 7)
                        .addComponent(quitar)
                        .addGap(7, 7, 7)
                        .addComponent(quitartodo))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bt_nuevo1)
                    .addComponent(bt_cancelar)
                    .addComponent(bt_guardar1)
                    .addComponent(bt_salir))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigoActionPerformed

    private void nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreActionPerformed

    private void r_mecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_mecaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_mecaActionPerformed

    private void quitartodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitartodoActionPerformed
        // TODO add your handling code here
        DefaultTableModel modelo = (DefaultTableModel) tb_conductores.getModel();
while (modelo.getRowCount() > 0) {
    modelo.removeRow(0);
}

    }//GEN-LAST:event_quitartodoActionPerformed

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        // TODO add your handling code here:
        int indice = tb_carros.getSelectedRow();
if (indice >= 0) {
    DefaultTableModel mymodelo = (DefaultTableModel) tb_carros.getModel();
    Object[] filaSeleccionada = new Object[mymodelo.getColumnCount()];

    for (int i = 0; i < mymodelo.getColumnCount(); i++) {
        filaSeleccionada[i] = mymodelo.getValueAt(indice, i);
    }

    // Agregar la fila seleccionada a la tabla "tb_conductores"
    DefaultTableModel conductoresModel = (DefaultTableModel) tb_conductores.getModel();
    conductoresModel.addRow(filaSeleccionada);
    tb_conductores.setModel(conductoresModel);

    // Mostrar mensaje de confirmación
    String mensaje = "Fila seleccionada agregada a tb_conductores: ";
    for (Object valor : filaSeleccionada) {
        mensaje += valor.toString() + " ";
    }
    JOptionPane.showMessageDialog(null, mensaje);
}

    }//GEN-LAST:event_agregarActionPerformed

    private void agretodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agretodoActionPerformed
        // TODO add your handling code here:
        DefaultTableModel mymodelo = (DefaultTableModel) tb_carros.getModel();
int rowCount = mymodelo.getRowCount();

for (int i = 0; i < rowCount; i++) {
    Object[] filaSeleccionada = new Object[mymodelo.getColumnCount()];

    for (int j = 0; j < mymodelo.getColumnCount(); j++) {
        filaSeleccionada[j] = mymodelo.getValueAt(i, j);
    }

    // Agregar la fila seleccionada a la tabla "tb_conductores"
    DefaultTableModel conductoresModel = (DefaultTableModel) tb_conductores.getModel();
    conductoresModel.addRow(filaSeleccionada);
    tb_conductores.setModel(conductoresModel);
}

    }//GEN-LAST:event_agretodoActionPerformed

    private void quitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitarActionPerformed
        // TODO add your handling code here:
        int indice = tb_conductores.getSelectedRow();
        if (indice >= 0) {
        DefaultTableModel mymodelo = (DefaultTableModel) tb_conductores.getModel();
        mymodelo.removeRow(indice);
        }
    }//GEN-LAST:event_quitarActionPerformed

    private void r_autoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_autoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_autoActionPerformed

    private void licenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_licenciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_licenciaActionPerformed

    private void bt_guardar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_guardar1ActionPerformed
        // TODO add your handling code here:
        Gcoductores();
        Dcoductores();
    }//GEN-LAST:event_bt_guardar1ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost/coductores";
        String username = "root";
        String password = "";

        try {
            Connection con = DriverManager.getConnection(url, username, password);
            System.out.println("Conexión exitosa a la base de datos");
            // Aquí puedes realizar operaciones con la conexión establecida
            con.close();
        } catch (SQLException e) {
            System.err.println("Error al conectar a la base de datos: " + e.getMessage());
        }
        
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(examen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(examen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(examen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(examen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new examen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JButton agretodo;
    private javax.swing.JButton bt_cancelar;
    private javax.swing.JButton bt_guardar1;
    private javax.swing.JButton bt_nuevo1;
    private javax.swing.JButton bt_salir;
    private javax.swing.JTextField codigo;
    private javax.swing.JTextField cuidad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField licencia;
    private javax.swing.JTextField nombre;
    private javax.swing.JButton quitar;
    private javax.swing.JButton quitartodo;
    private javax.swing.JRadioButton r_auto;
    private javax.swing.JRadioButton r_meca;
    private javax.swing.JTable tb_carros;
    private javax.swing.JTable tb_conductores;
    private javax.swing.ButtonGroup tipocarros;
    // End of variables declaration//GEN-END:variables
}
